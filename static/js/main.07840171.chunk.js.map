{"version":3,"sources":["reducer/index.js","reducer/itemReducer.js","reducer/listreducer.js","reducer/commentReducer.js","reducer/commentItemReducer.js","store.js","action/listaction.js","components/presentation/listItemview.js","components/container/listitem.js","action/itemaction.js","components/presentation/pageList.js","views/topstories.js","views/jobstories.js","views/askstories.js","components/presentation/pagetitle.js","components/presentation/commentItem.js","components/container/comment.js","action/commentItemaction.js","components/presentation/commentlist.js","views/commentpage.js","action/commentaction.js","components/presentation/navbar.js","components/presentation/titlebar.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","itemReducer","state","arguments","length","undefined","action","type","newObject","Object","objectSpread","id","data","payload","loading","listReducer","currentPage","idList","currentTab","page","commentReducer","item","kids","load","commentItemReducer","newState","store","createStore","reducer","setIdList","list","tab","changePage","newPage","ListItemView","props","react_default","a","createElement","className","itemTitle","itemAuthor","itemComment","ListItem","Axios","get","this","setData","title","descendants","by","Link","to","pathname","concat","object","listItemview","Component","connect","dispatch","PageList","e","target","value","pageList","i","push","key","onClick","clickAction","bind","TopStories","axios","slice","listItems","slicePage","map","listitem","presentation_pageList","JobStories","AskStories","PageTitle","href","url","CommentItem","src","alt","time","dangerouslySetInnerHTML","__html","text","comment","commentID","Comment","nextProp","resetData","unixTimestamp","Date","year","getFullYear","getMonth","getDate","getHours","getMinutes","commentItem","convertUnixTimeToNormal","itemID","CommentList","index","CommentPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","params","location","setItem","nextprops","pagetitle","commentlist","class","NavBar","tabs","path","TitleBar","App","es","BrowserRouter","Switch","Route","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAKeA,kBAAgB,CAC7BC,YCNa,WAAqC,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOC,MACb,IAAK,gBACH,IAAIC,EAASC,OAAAC,EAAA,EAAAD,CAAA,GAAQP,GAKrB,OAJAM,EAAUF,EAAOK,IAAM,CACrBC,KAAMN,EAAOO,QAAQD,KACrBE,QAASR,EAAOO,QAAQC,SAEnBN,EACT,QACE,OAAON,IDHXa,YEPa,WASb,IARAb,EAQAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GARQ,CACNa,YAAa,EACbF,SAAS,EACTG,OAAQ,GACRL,KAAM,GACNM,WAAY,eAEdZ,EACAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACA,OAAQC,EAAOC,MACb,IAAK,cACH,OAAOE,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAUI,EAAOO,SAE/B,IAAK,cACH,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAmBc,YAAaV,EAAOO,QAAQM,OAEjD,QACE,OAAOjB,IFVXkB,eGRa,WAGb,IAFAlB,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFQ,CAAEkB,KAAM,GAAIC,KAAM,GAAIR,SAAS,GACvCR,EACAH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACA,OAAQC,EAAOC,MACb,IAAK,mBACH,MAAO,CACLc,KAAMf,EAAOO,QAAQQ,KACrBP,QAASR,EAAOO,QAAQU,KACxBD,KAAMhB,EAAOO,QAAQS,MAEzB,IAAK,gBACH,MAAO,CAAED,KAAM,GAAIC,KAAM,GAAIR,SAAS,GACxC,QACE,OAAOZ,IHLXsB,mBITa,WAAgD,IAApBtB,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOC,MACb,IAAK,wBACH,IAAIkB,EAAQhB,OAAAC,EAAA,EAAAD,CAAA,GAAQP,GAMpB,OALAuB,EAASnB,EAAOO,QAAQF,IAAM,CAC5BC,KAAMN,EAAOO,QAAQD,KACrBE,QAASR,EAAOO,QAAQC,SAGnBW,EAET,IAAK,qBACH,MAAO,GAET,QACE,OAAOvB,MCREwB,EALDC,YAAYC,oDCFnB,SAASC,EAAUC,EAAMP,EAAMQ,GACpC,MAAO,CACLxB,KAAM,cACNM,QAAS,CAAEI,OAAQa,EAAMhB,QAASS,EAAML,WAAYa,IAIjD,SAASC,EAAWC,GACzB,MAAO,CACL1B,KAAM,cACNM,QAAS,CAAEM,KAAMc,gBCTrB,IAmBeC,EAnBM,SAAAC,GACnB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXJ,EAAMrB,SACLsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcJ,EAAMK,WACnCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,QAAoCJ,EAAMM,YAC1CL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,eACeJ,EAAMO,eAK1BP,EAAMrB,SAAWsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,gBCRlBI,4TAEeC,IAAMC,IACrB,8CAAgDC,KAAKX,MAAMxB,GAAK,gBAD9DU,SAIJyB,KAAKX,MAAMY,QAAQ1B,EAAKT,MAAM,EAAOkC,KAAKX,MAAMxB,uIAIhD,IACI6B,EACFE,EACAD,EAHEpB,EAAOyB,KAAKX,MAAMvB,KAAKkC,KAAKX,MAAMxB,IAIpCG,GAAU,EASZ,YAPaT,IAATgB,IACFmB,EAAYnB,EAAKT,KAAKoC,MACtBN,EAAcrB,EAAKT,KAAKqC,YACxBR,EAAapB,EAAKT,KAAKsC,GACvBpC,EAAUO,EAAKP,SAIfsB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,GAAI,CAAEC,SAAQ,SAAAC,OAAWR,KAAKX,MAAMxB,IAAMT,MAAO,CAAEqD,OAAQlC,KAE3De,EAAAC,EAAAC,cAACkB,EAAD,CACE1C,QAASA,EACT2B,WAAYA,EACZC,YAAaA,EACbF,UAAWA,YA/BEiB,aAoDRC,cAdS,SAAAxD,GACtB,MAAO,CACLU,KAAMV,EAAMD,cAIW,SAAA0D,GACzB,MAAO,CACLZ,QAAS,SAACnC,EAAME,EAASH,GACvB,OAAOgD,ECrDJ,CACLpD,KAAM,gBACNM,QAAS,CACPD,KDkD+BA,ECjD/BE,QDiDqCA,GC/CvCH,GD+CgDA,OAKrC+C,CAGbf,GE7BaiB,sLA9BDC,GACVf,KAAKX,MAAMH,WAAW6B,EAAEC,OAAOC,MAAQ,oCAMvC,IAFA,IAAIC,EAAW,GACXhD,EAAc8B,KAAKX,MAAMnB,YACpBiD,EAAIjD,EAAc,EAAGiD,GAAKjD,EAAc,EAAGiD,IAClDD,EAASE,KACP9B,EAAAC,EAAAC,cAAA,MACEC,UACE0B,IAAMjD,EAAc,EAAI,wBAA0B,YAEpDmD,IAAKF,EACLF,MAAOE,EACPG,QAAStB,KAAKuB,YAAYC,KAAKxB,OAE9BmB,IAKP,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAayB,WAzBZP,aCKjBc,iTAGAzB,KAAKX,MAAMlB,OAAOb,QAAU,GACF,gBAA1B0C,KAAKX,MAAMjB,4CAEQsD,IAAM3B,IACvB,gEADIf,SAGNgB,KAAKX,MAAMN,UAAUC,EAAKlB,MAAM,EAAO,qJAKzC,OAAOkC,KAAKX,MAAMlB,OAAOwD,MACE,GAAzB3B,KAAKX,MAAMnB,YACoB,IAA9B8B,KAAKX,MAAMnB,YAAc,uCAInBiB,GACTa,KAAKX,MAAMH,WAAWC,oCAItB,IACIyC,EADU5B,KAAK6B,YACKC,IAAI,SAAAb,GAC1B,OAAO3B,EAAAC,EAAAC,cAACuC,EAAD,CAAWlE,GAAIoD,EAAOI,IAAKJ,MAGpC,OAAIjB,KAAKX,MAAMrB,QACNsB,EAAAC,EAAAC,cAAA,yBAGPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,GAC5BtC,EAAAC,EAAAC,cAACwC,EAAD,CACE9D,YAAa8B,KAAKX,MAAMnB,YACxBgB,WAAYc,KAAKd,WAAWsC,KAAKxB,gBAtClBW,aAkEVC,cArBS,SAAAxD,GACtB,MAAO,CACLc,YAAad,EAAMa,YAAYC,YAC/BF,QAASZ,EAAMa,YAAYD,QAC3BG,OAAQf,EAAMa,YAAYE,OAC1BL,KAAMV,EAAMa,YAAYH,KACxBM,WAAYhB,EAAMa,YAAYG,aAIP,SAAAyC,GACzB,MAAO,CACL9B,UAAW,SAACC,EAAMhB,GAChB6C,EAASrD,EAAiBwB,EAAMhB,KAElCkB,WAAY,SAAAC,GACV0B,EAASrD,EAAkB2B,OAKlByB,CAGba,GCrEIQ,iTAGAjC,KAAKX,MAAMlB,OAAOb,QAAU,GACF,gBAA1B0C,KAAKX,MAAMjB,4CAEQsD,IAAM3B,IACvB,gEADIf,SAGNgB,KAAKX,MAAMN,UAAUC,EAAKlB,MAAM,EAAO,qJAKzC,OAAOkC,KAAKX,MAAMlB,OAAOwD,MACE,GAAzB3B,KAAKX,MAAMnB,YACoB,IAA9B8B,KAAKX,MAAMnB,YAAc,uCAInBiB,GACTa,KAAKX,MAAMH,WAAWC,oCAItB,IACIyC,EADU5B,KAAK6B,YACKC,IAAI,SAAAb,GAC1B,OAAO3B,EAAAC,EAAAC,cAACuC,EAAD,CAAWlE,GAAIoD,EAAOI,IAAKJ,MAGpC,OAAIjB,KAAKX,MAAMrB,QACNsB,EAAAC,EAAAC,cAAA,yBAGPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,GAC5BtC,EAAAC,EAAAC,cAACwC,EAAD,CACE9D,YAAa8B,KAAKX,MAAMnB,YACxBgB,WAAYc,KAAKd,WAAWsC,KAAKxB,gBAtClBW,aAiEVC,cApBS,SAAAxD,GACtB,MAAO,CACLc,YAAad,EAAMa,YAAYC,YAC/BF,QAASZ,EAAMa,YAAYD,QAC3BG,OAAQf,EAAMa,YAAYE,OAC1BL,KAAMV,EAAMa,YAAYH,OAID,SAAA+C,GACzB,MAAO,CACL9B,UAAW,SAACC,EAAMhB,GAChB6C,EAASrD,EAAiBwB,EAAMhB,KAElCkB,WAAY,SAAAC,GACV0B,EAASrD,EAAkB2B,OAKlByB,CAGbqB,GCpEIC,iTAGAlC,KAAKX,MAAMlB,OAAOb,QAAU,GACF,gBAA1B0C,KAAKX,MAAMjB,4CAEQsD,IAAM3B,IACvB,gEADIf,SAGNgB,KAAKX,MAAMN,UAAUC,EAAKlB,MAAM,EAAO,qJAKzC,OAAOkC,KAAKX,MAAMlB,OAAOwD,MACE,GAAzB3B,KAAKX,MAAMnB,YACoB,IAA9B8B,KAAKX,MAAMnB,YAAc,uCAInBiB,GACTa,KAAKX,MAAMH,WAAWC,oCAItB,IACIyC,EADU5B,KAAK6B,YACKC,IAAI,SAAAb,GAC1B,OAAO3B,EAAAC,EAAAC,cAACuC,EAAD,CAAWlE,GAAIoD,EAAOI,IAAKJ,MAGpC,OAAIjB,KAAKX,MAAMrB,QACNsB,EAAAC,EAAAC,cAAA,yBAGPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,GAC5BtC,EAAAC,EAAAC,cAACwC,EAAD,CACE9D,YAAa8B,KAAKX,MAAMnB,YACxBgB,WAAYc,KAAKd,WAAWsC,KAAKxB,gBAtClBW,aAiEVC,cApBS,SAAAxD,GACtB,MAAO,CACLc,YAAad,EAAMa,YAAYC,YAC/BF,QAASZ,EAAMa,YAAYD,QAC3BG,OAAQf,EAAMa,YAAYE,OAC1BL,KAAMV,EAAMa,YAAYH,OAID,SAAA+C,GACzB,MAAO,CACL9B,UAAW,SAACC,EAAMhB,EAASiB,GACzB4B,EAASrD,EAAiBwB,EAAMhB,EAASiB,KAE3CC,WAAY,SAAAC,GACV0B,EAASrD,EAAkB2B,OAKlByB,CAGbsB,GCzEF,IAceC,EAdG,SAAA9C,GAAS,IACnBd,EAASc,EAATd,KACN,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAG4C,KAAM7D,EAAK8D,KAAM9D,EAAK2B,SAG7BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,QAAmClB,EAAK6B,MC0B/BkC,EAnCK,SAAAjD,GAClB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OACE+C,IAAI,6BACJC,IAAI,eACJ/C,UAAU,kBAGdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAMe,KAEbd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBJ,EAAMoD,MACrCnD,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACViD,wBAAyB,CAAEC,OAAQtD,EAAMuD,UAK/CtD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACElC,IAAf8B,EAAMb,MAAsBa,EAAMb,KAAKlB,OAAS,GAC/CgC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACXJ,EAAMb,KAAKsD,IAAI,SAACb,EAAOpD,GACtB,OAAOyB,EAAAC,EAAAC,cAACqD,EAAD,CAASC,UAAW7B,EAAOI,IAAKxD,EAAI+E,KAAK,iBCvBtDG,4TAGejD,IACf,8CACEE,KAAKX,MAAMyD,UACX,gBAHAvE,SAMJyB,KAAKX,MAAMY,QAAQ1B,EAAKT,MAAM,EAAOkC,KAAKX,MAAMyD,uMAGlBE,4EAC1BhD,KAAKX,MAAMyD,YAAcE,EAASF,iCACpC9C,KAAKX,MAAM4D,qBACMnD,IACf,8CACEkD,EAASF,UACT,gBAHAvE,SAMJyB,KAAKX,MAAMY,QAAQ1B,EAAKT,MAAM,EAAOkF,EAASF,8JAI1BI,GACtB,IAAI3D,EAAI,IAAI4D,KAAqB,IAAhBD,GAebE,EAAO7D,EAAE8D,cAOb,MArBa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGiB9D,EAAE+D,YAKF,IAJR/D,EAAEgE,UAImB,KAAOH,EAAO,MAHnC7D,EAAEiE,WAGgD,IAFnDjE,EAAEkE,8CAOZ,QAA8ClG,IAA1CyC,KAAKX,MAAMvB,KAAKkC,KAAKX,MAAMyD,WAA0B,CACvD,GAAI9C,KAAKX,MAAMvB,KAAKkC,KAAKX,MAAMyD,WAAW9E,QACxC,OAAOsB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,eAET,IAAI3B,EAAOkC,KAAKX,MAAMvB,KAAKkC,KAAKX,MAAMyD,WAAWhF,KAEjD,OACEkC,KAAKX,MAAMrB,SACTsB,EAAAC,EAAAC,cAACkE,EAAD,CACEtD,GAAItC,EAAKsC,GACTqC,KAAMzC,KAAK2D,wBAAwB7F,EAAK2E,MACxCG,KAAM9E,EAAK8E,KACXpE,KAAMV,EAAKU,OAKjB,OAAOc,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,sBArESkB,aA2FPC,cAjBS,SAAAxD,GACtB,MAAO,CACLU,KAAMV,EAAMsB,qBAIW,SAAAmC,GACzB,MAAO,CACLZ,QAAS,SAAC1B,EAAMP,EAASH,GACvBgD,ECzFC,SAAiBtC,EAAME,EAAMmF,GAClC,MAAO,CACLnG,KAAM,wBACNM,QAAS,CAAED,KAAMS,EAAMP,QAASS,EAAMZ,GAAI+F,IDsF/BpG,CAAee,EAAMP,EAASH,KAEzCoF,UAAW,WACTpC,ECpFG,CACLpD,KAAM,0BDwFKmD,CAGbmC,GEtFac,EAXK,SAAAxE,GAAS,IACrBd,EAASc,EAATd,KACN,OACEe,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACXlB,EAAKC,KAAKsD,IAAI,SAACb,EAAO6C,GACrB,OAAOxE,EAAAC,EAAAC,cAACqD,EAAD,CAASC,UAAW7B,EAAOI,IAAKyC,EAAOlB,KAAK,aCDrDmB,cACJ,SAAAA,EAAY1E,GAAO,IAAA2E,EAAA,OAAArG,OAAAsG,EAAA,EAAAtG,CAAAqC,KAAA+D,IACjBC,EAAArG,OAAAuG,EAAA,EAAAvG,CAAAqC,KAAArC,OAAAwG,EAAA,EAAAxG,CAAAoG,GAAAK,KAAApE,KAAMX,KACDxB,GAAKmG,EAAK3E,MAAMgF,MAAMC,OAAOzG,GAFjBmG,2MAOiBzG,IAA9ByC,KAAKX,MAAMkF,SAASnH,sBACtBU,EAAOkC,KAAKX,MAAMkF,SAASnH,MAAMqD,OAAO3C,mCACjBP,IAAdyC,KAAKzB,qCACGuB,IAAMC,IACrB,8CAAgDC,KAAKnC,GAAK,gBADxDU,SAGJT,EAAOS,EAAKT,YAGdkC,KAAKX,MAAMmF,QAAQ1G,GAAM,EAAOA,EAAKU,mMAGPiG,+EACF,IAAxBzE,KAAKX,MAAMd,KAAKV,sBACdmC,KAAKX,MAAMd,KAAKV,KAAO4G,EAAUlG,KAAKV,0BACxCmC,KAAKX,MAAMmF,QAAQ,CAAE3G,IAAK,EAAGW,KAAM,KAAM,EAAM,aAC9BsB,IAAMC,IACrB,8CAAgDC,KAAKnC,GAAK,gBADxDU,SAGAT,EAAOS,EAAKT,KAEhBkC,KAAKX,MAAMmF,QAAQ1G,GAAM,EAAOA,EAAKU,0IAMzC,IAAID,EAAOyB,KAAKX,MAAMd,KACtB,YAAahB,IAATgB,IAAmC,IAAbA,EAAKV,GAE3ByB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACkF,EAAD,CAAWnG,KAAMA,IACjBe,EAAAC,EAAAC,cAAA,WAAMjB,EAAKqE,MACVrE,EAAKC,MAAQD,EAAKC,KAAKlB,OAAS,GAC/BgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACmF,EAAD,CAAapG,KAAMA,KAGtByB,KAAKX,MAAMb,MAAQwB,KAAKX,MAAMb,KAAKlB,QAAU,GAC5CgC,EAAAC,EAAAC,cAAA,OAAKoF,MAAM,cAAX,2BAKCtF,EAAAC,EAAAC,cAAA,gCApDamB,aA4EXC,cAnBS,SAAAxD,GACtB,MAAO,CACLmB,KAAMnB,EAAMkB,eAAeC,KAC3BC,KAAMpB,EAAMkB,eAAeE,KAC3BR,QAASZ,EAAMkB,eAAeN,UAIP,SAAA6C,GACzB,MAAO,CACL2D,QAAS,SAACjG,EAAMP,EAASQ,GACvBqC,EC3EC,SAAiBtC,EAAME,EAAMD,GAClC,MAAO,CACLf,KAAM,mBACNM,QAAS,CAAEQ,OAAME,OAAMD,SDwEZhB,CAAee,EAAMP,EAASQ,KAEzCyE,UAAW,WACTpC,ECtEG,CACLpD,KAAM,qBD0EKmD,CAGbmD,GEpFa,SAASc,EAAOxF,GAC7B,IAAIyF,EAAOzF,EAAMyF,KAAKhD,IAAI,SAAC7C,EAAK6E,GAC9B,OACExE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAUtB,EAAI8F,MAAQ1D,IAAKyC,GACrCxE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOR,EAAI2D,SAI/B,OACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYqF,ICRzB,SAASE,EAAS3F,GAMvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,MACpBjB,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,iBAAiB9C,UAAU,YAAY+C,IAAI,SACpDlD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBAEFH,EAAAC,EAAAC,cAACqF,EAAD,CAAQC,KAXD,CACT,CAAElC,KAAM,cAAemC,KAAM,KAC7B,CAAEnC,KAAM,iBAAkBmC,KAAM,eAChC,CAAEnC,KAAM,iBAAkBmC,KAAM,+CCsBrBE,mLAlBX,OACE3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAUtG,MAAOA,GACfU,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACwF,EAAD,MACA1F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOC,OAAK,EAACP,KAAK,IAAIQ,UAAW9D,IACjCnC,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAON,KAAK,YAAYQ,UAAWxB,IACnCzE,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOC,OAAK,EAACP,KAAK,cAAcQ,UAAWrD,IAC3C5C,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAOC,OAAK,EAACP,KAAK,cAAcQ,UAAWtD,eAXvCtB,aCEE6E,QACW,cAA7BC,OAAOlB,SAASmB,UAEe,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAASrB,MACvB,2DCVNsB,IAASC,OAAOtG,EAAAC,EAAAC,cAACqG,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.07840171.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport listReducer from \"./listreducer\";\r\nimport commentReducer from \"./commentReducer\";\r\nimport commentItemReducer from \"./commentItemReducer\";\r\nexport default combineReducers({\r\n  itemReducer,\r\n  listReducer,\r\n  commentReducer,\r\n  commentItemReducer\r\n});\r\n","export default function reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_LIST_DATA\":\r\n      let newObject = { ...state };\r\n      newObject[action.id] = {\r\n        data: action.payload.data,\r\n        loading: action.payload.loading\r\n      };\r\n      return newObject;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function reducer(\r\n  state = {\r\n    currentPage: 0,\r\n    loading: true,\r\n    idList: [],\r\n    data: [],\r\n    currentTab: \"TOP_STORIES\"\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_ID_LIST\": {\r\n      return { ...state, ...action.payload };\r\n    }\r\n    case \"CHANGE_PAGE\": {\r\n      return { ...state, currentPage: action.payload.page };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function CommentReducer(\r\n  state = { item: {}, kids: {}, loading: true },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"SET_DATA_COMMENT\":\r\n      return {\r\n        item: action.payload.item,\r\n        loading: action.payload.load,\r\n        kids: action.payload.kids\r\n      };\r\n    case \"RESET_COMMENT\":\r\n      return { item: {}, kids: {}, loading: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function commentItemReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_DATA_COMMENT_ITEM\": {\r\n      let newState = { ...state };\r\n      newState[action.payload.id] = {\r\n        data: action.payload.data,\r\n        loading: action.payload.loading\r\n      };\r\n\r\n      return newState;\r\n    }\r\n    case \"RESET_COMMENT_ITEM\": {\r\n      return {};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nconst store = createStore(reducer);\r\n\r\n// store.subscribe(() => {\r\n//   console.log(\"store updated\", store.getState());\r\n// });\r\nexport default store;\r\n","export function setIdList(list, load, tab) {\r\n  return {\r\n    type: \"SET_ID_LIST\",\r\n    payload: { idList: list, loading: load, currentTab: tab }\r\n  };\r\n}\r\n\r\nexport function changePage(newPage) {\r\n  return {\r\n    type: \"CHANGE_PAGE\",\r\n    payload: { page: newPage }\r\n  };\r\n}\r\n","import React from \"react\";\r\nconst ListItemView = props => {\r\n  return (\r\n    <li className=\"list-item\">\r\n      {props.loading || (\r\n        <div>\r\n          <div className=\"item-title\">{props.itemTitle}</div>\r\n          <div className=\"item-sub-title\">\r\n            <span className=\"auther-name\"> By: {props.itemAuthor}</span>\r\n            <span className=\"comment-number\">\r\n              , comments: {props.itemComment}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {props.loading && <div className=\"loading\">LOADING...</div>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItemView;\r\n","import Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as action from \"../../action/itemaction\";\r\nimport ListItemView from \"../presentation/listItemview\";\r\n\r\nclass ListItem extends Component {\r\n  async componentDidMount() {\r\n    let item = await Axios.get(\r\n      \"https://hacker-news.firebaseio.com/v0/item/\" + this.props.id + \".json\"\r\n    );\r\n\r\n    this.props.setData(item.data, false, this.props.id);\r\n  }\r\n\r\n  render() {\r\n    let item = this.props.data[this.props.id];\r\n    let itemTitle,\r\n      itemComment,\r\n      itemAuthor,\r\n      loading = true;\r\n\r\n    if (item !== undefined) {\r\n      itemTitle = item.data.title;\r\n      itemComment = item.data.descendants;\r\n      itemAuthor = item.data.by;\r\n      loading = item.loading;\r\n    }\r\n\r\n    return (\r\n      <Link\r\n        to={{ pathname: `/news/${this.props.id}`, state: { object: item } }}\r\n      >\r\n        <ListItemView\r\n          loading={loading}\r\n          itemAuthor={itemAuthor}\r\n          itemComment={itemComment}\r\n          itemTitle={itemTitle}\r\n        />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.itemReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setData: (data, loading, id) => {\r\n      return dispatch(action.setData(data, loading, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListItem);\r\n","export function setData(item, load, itemID) {\r\n  return {\r\n    type: \"SET_LIST_DATA\",\r\n    payload: {\r\n      data: item,\r\n      loading: load\r\n    },\r\n    id: itemID\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageList extends Component {\r\n  clickAction(e) {\r\n    this.props.changePage(e.target.value - 1);\r\n  }\r\n\r\n  render() {\r\n    let pageList = [];\r\n    let currentPage = this.props.currentPage;\r\n    for (let i = currentPage + 1; i <= currentPage + 5; i++) {\r\n      pageList.push(\r\n        <li\r\n          className={\r\n            i === currentPage + 1 ? \"page-item active-page\" : \"page-item\"\r\n          }\r\n          key={i}\r\n          value={i}\r\n          onClick={this.clickAction.bind(this)}\r\n        >\r\n          {i}\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"page-list\">{pageList}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageList;\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport * as action from \"../action/listaction\";\r\nimport ListItems from \"../components/container/listitem\";\r\nimport PageList from \"../components/presentation/pageList\";\r\n\r\nclass TopStories extends Component {\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.idList.length <= 0 ||\r\n      this.props.currentTab !== \"TOP_STORIES\"\r\n    ) {\r\n      const list = await axios.get(\r\n        \"https://hacker-news.firebaseio.com/v0/topstories.json\"\r\n      );\r\n      this.props.setIdList(list.data, false, \"TOP_STORIES\");\r\n    }\r\n  }\r\n\r\n  slicePage() {\r\n    return this.props.idList.slice(\r\n      this.props.currentPage * 10,\r\n      (this.props.currentPage + 1) * 10\r\n    );\r\n  }\r\n\r\n  changePage(newPage) {\r\n    this.props.changePage(newPage);\r\n  }\r\n\r\n  render() {\r\n    let cutList = this.slicePage();\r\n    let listItems = cutList.map(value => {\r\n      return <ListItems id={value} key={value} />;\r\n    });\r\n\r\n    if (this.props.loading) {\r\n      return <div>LOADING...</div>;\r\n    }\r\n    return (\r\n      <div className=\"main-body\">\r\n        <ul className=\"title-list\">{listItems}</ul>\r\n        <PageList\r\n          currentPage={this.props.currentPage}\r\n          changePage={this.changePage.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentPage: state.listReducer.currentPage,\r\n    loading: state.listReducer.loading,\r\n    idList: state.listReducer.idList,\r\n    data: state.listReducer.data,\r\n    currentTab: state.listReducer.currentTab\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setIdList: (list, loading) => {\r\n      dispatch(action.setIdList(list, loading));\r\n    },\r\n    changePage: newPage => {\r\n      dispatch(action.changePage(newPage));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TopStories);\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport * as action from \"../action/listaction\";\r\nimport ListItems from \"../components/container/listitem\";\r\nimport PageList from \"../components/presentation/pageList\";\r\n\r\nclass JobStories extends Component {\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.idList.length <= 0 ||\r\n      this.props.currentTab !== \"JOB_STORIES\"\r\n    ) {\r\n      const list = await axios.get(\r\n        \"https://hacker-news.firebaseio.com/v0/jobstories.json\"\r\n      );\r\n      this.props.setIdList(list.data, false, \"JOB_STORIES\");\r\n    }\r\n  }\r\n\r\n  slicePage() {\r\n    return this.props.idList.slice(\r\n      this.props.currentPage * 10,\r\n      (this.props.currentPage + 1) * 10\r\n    );\r\n  }\r\n\r\n  changePage(newPage) {\r\n    this.props.changePage(newPage);\r\n  }\r\n\r\n  render() {\r\n    let cutList = this.slicePage();\r\n    let listItems = cutList.map(value => {\r\n      return <ListItems id={value} key={value} />;\r\n    });\r\n\r\n    if (this.props.loading) {\r\n      return <div>LOADING...</div>;\r\n    }\r\n    return (\r\n      <div className=\"main-body\">\r\n        <ul className=\"title-list\">{listItems}</ul>\r\n        <PageList\r\n          currentPage={this.props.currentPage}\r\n          changePage={this.changePage.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentPage: state.listReducer.currentPage,\r\n    loading: state.listReducer.loading,\r\n    idList: state.listReducer.idList,\r\n    data: state.listReducer.data\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setIdList: (list, loading) => {\r\n      dispatch(action.setIdList(list, loading));\r\n    },\r\n    changePage: newPage => {\r\n      dispatch(action.changePage(newPage));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobStories);\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport * as action from \"../action/listaction\";\r\nimport ListItems from \"../components/container/listitem\";\r\nimport PageList from \"../components/presentation/pageList\";\r\n\r\nclass AskStories extends Component {\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.idList.length <= 0 ||\r\n      this.props.currentTab !== \"ASK_STORIES\"\r\n    ) {\r\n      const list = await axios.get(\r\n        \"https://hacker-news.firebaseio.com/v0/askstories.json\"\r\n      );\r\n      this.props.setIdList(list.data, false, \"ASK_STORIES\");\r\n    }\r\n  }\r\n\r\n  slicePage() {\r\n    return this.props.idList.slice(\r\n      this.props.currentPage * 10,\r\n      (this.props.currentPage + 1) * 10\r\n    );\r\n  }\r\n\r\n  changePage(newPage) {\r\n    this.props.changePage(newPage);\r\n  }\r\n\r\n  render() {\r\n    let cutList = this.slicePage();\r\n    let listItems = cutList.map(value => {\r\n      return <ListItems id={value} key={value} />;\r\n    });\r\n\r\n    if (this.props.loading) {\r\n      return <div>LOADING...</div>;\r\n    }\r\n    return (\r\n      <div className=\"main-body\">\r\n        <ul className=\"title-list\">{listItems}</ul>\r\n        <PageList\r\n          currentPage={this.props.currentPage}\r\n          changePage={this.changePage.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentPage: state.listReducer.currentPage,\r\n    loading: state.listReducer.loading,\r\n    idList: state.listReducer.idList,\r\n    data: state.listReducer.data\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setIdList: (list, loading, tab) => {\r\n      dispatch(action.setIdList(list, loading, tab));\r\n    },\r\n    changePage: newPage => {\r\n      dispatch(action.changePage(newPage));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AskStories);\r\n","import React from \"react\";\r\n\r\nconst PageTitle = props => {\r\n  let { item } = props;\r\n  return (\r\n    <div className=\"page-title-container\">\r\n      <div className=\"page-title\">\r\n        <h1>\r\n          <a href={item.url}>{item.title}</a>\r\n        </h1>\r\n      </div>\r\n      <div className=\"page-author\">By : {item.by}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport Comment from \"../container/comment\";\r\nconst CommentItem = props => {\r\n  return (\r\n    <li className=\"comment-item \">\r\n      <div className=\"clearfix\">\r\n        <div className=\"comment-icon-container\">\r\n          <img\r\n            src=\"../images/commentIcon2.jpg\"\r\n            alt=\"comment-icon\"\r\n            className=\"comment-icon\"\r\n          />\r\n        </div>\r\n        <div className=\"comment-detail-container\">\r\n          <div className=\"comment-author\">\r\n            <h3>{props.by}</h3>\r\n          </div>\r\n          <div className=\"comment-date\">{props.time}</div>\r\n          <div\r\n            className=\"comment-discription\"\r\n            dangerouslySetInnerHTML={{ __html: props.text }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <hr className=\"comment-serperator\" />\r\n      {props.kids !== undefined && props.kids.length > 0 && (\r\n        <ul className=\"sub-comment\">\r\n          {props.kids.map((value, id) => {\r\n            return <Comment commentID={value} key={id} text=\"sub\" />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport CommentItem from \"../presentation/commentItem\";\r\nimport * as action from \"../../action/commentItemaction\";\r\n\r\nclass Comment extends Component {\r\n  async componentDidMount() {\r\n    //this.props.resetData();\r\n    let item = await Axios(\r\n      \"https://hacker-news.firebaseio.com/v0/item/\" +\r\n        this.props.commentID +\r\n        \".json\"\r\n    );\r\n\r\n    this.props.setData(item.data, false, this.props.commentID);\r\n  }\r\n\r\n  async componentWillReceiveProps(nextProp) {\r\n    if (this.props.commentID !== nextProp.commentID) {\r\n      this.props.resetData();\r\n      let item = await Axios(\r\n        \"https://hacker-news.firebaseio.com/v0/item/\" +\r\n          nextProp.commentID +\r\n          \".json\"\r\n      );\r\n\r\n      this.props.setData(item.data, false, nextProp.commentID);\r\n    }\r\n  }\r\n\r\n  convertUnixTimeToNormal(unixTimestamp) {\r\n    let a = new Date(unixTimestamp * 1000);\r\n    let months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ];\r\n    let year = a.getFullYear();\r\n    let month = months[a.getMonth()];\r\n    let date = a.getDate();\r\n    let hour = a.getHours();\r\n    let min = a.getMinutes();\r\n\r\n    let time = month + \" \" + date + \" ,\" + year + \" @ \" + hour + \":\" + min;\r\n    return time;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.data[this.props.commentID] !== undefined) {\r\n      if (this.props.data[this.props.commentID].loading) {\r\n        return <li className=\"comment-item\"> LOADING...</li>;\r\n      }\r\n      let data = this.props.data[this.props.commentID].data;\r\n\r\n      return (\r\n        this.props.loading || (\r\n          <CommentItem\r\n            by={data.by}\r\n            time={this.convertUnixTimeToNormal(data.time)}\r\n            text={data.text}\r\n            kids={data.kids}\r\n          />\r\n        )\r\n      );\r\n    } else {\r\n      return <li className=\"comment-item\"> LOADING...</li>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.commentItemReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setData: (item, loading, id) => {\r\n      dispatch(action.setData(item, loading, id));\r\n    },\r\n    resetData: () => {\r\n      dispatch(action.resetData());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Comment);\r\n","export function setData(item, load, itemID) {\r\n  return {\r\n    type: \"SET_DATA_COMMENT_ITEM\",\r\n    payload: { data: item, loading: load, id: itemID }\r\n  };\r\n}\r\n\r\nexport function resetData() {\r\n  return {\r\n    type: \"RESET_COMMENT_ITEM\"\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Comment from \"../container/comment\";\r\n\r\nconst CommentList = props => {\r\n  let { item } = props;\r\n  return (\r\n    <ul className=\"comment-list\">\r\n      {item.kids.map((value, index) => {\r\n        return <Comment commentID={value} key={index} text=\"main\" />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport * as action from \"../action/commentaction\";\r\nimport PageTitle from \"../components/presentation/pagetitle\";\r\nimport CommentList from \"../components/presentation/commentlist\";\r\n\r\nclass CommentPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = this.props.match.params.id;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let data;\r\n    if (this.props.location.state !== undefined) {\r\n      data = this.props.location.state.object.data;\r\n    } else if (this.item === undefined) {\r\n      let item = await Axios.get(\r\n        \"https://hacker-news.firebaseio.com/v0/item/\" + this.id + \".json\"\r\n      );\r\n      data = item.data;\r\n    }\r\n\r\n    this.props.setItem(data, false, data.kids);\r\n  }\r\n\r\n  async componentWillReceiveProps(nextprops) {\r\n    if (this.props.item.id !== -1) {\r\n      if (this.props.item.id !== nextprops.item.id) {\r\n        this.props.setItem({ id: -1, kids: {} }, true, {});\r\n        let item = await Axios.get(\r\n          \"https://hacker-news.firebaseio.com/v0/item/\" + this.id + \".json\"\r\n        );\r\n        let data = item.data;\r\n\r\n        this.props.setItem(data, false, data.kids);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let item = this.props.item;\r\n    if (item !== undefined && item.id !== -1) {\r\n      return (\r\n        <div className=\"comment-page-body\">\r\n          <PageTitle item={item} />\r\n          <div>{item.text}</div>\r\n          {item.kids && item.kids.length > 0 && (\r\n            <div className=\"comment-list-container\">\r\n              <CommentList item={item} />\r\n            </div>\r\n          )}\r\n          {this.props.kids && this.props.kids.length <= 0 && (\r\n            <div class=\"no-comment\">No COMMENTS TO DISPLAY</div>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>LOADING...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    item: state.commentReducer.item,\r\n    kids: state.commentReducer.kids,\r\n    loading: state.commentReducer.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setItem: (item, loading, kids) => {\r\n      dispatch(action.setData(item, loading, kids));\r\n    },\r\n    resetData: () => {\r\n      dispatch(action.resetData());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CommentPage);\r\n","export function setData(item, load, kids) {\r\n  return {\r\n    type: \"SET_DATA_COMMENT\",\r\n    payload: { item, load, kids }\r\n  };\r\n}\r\n\r\nexport function resetData() {\r\n  return {\r\n    type: \"RESET_COMMENT\"\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function NavBar(props) {\r\n  let tabs = props.tabs.map((tab, index) => {\r\n    return (\r\n      <Link to={{ pathname: tab.path }} key={index}>\r\n        <li className=\"tab\">{tab.text}</li>\r\n      </Link>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul className=\"tab-list\">{tabs}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"./navbar\";\r\n\r\nexport function TitleBar(props) {\r\n  let tabs = [\r\n    { text: \"Top Stories\", path: \"/\" },\r\n    { text: \"Ask HN Stories\", path: \"/askstories\" },\r\n    { text: \"Job HN Stories\", path: \"/jobstories\" }\r\n  ];\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to={{ pathname: \"/\" }}>\r\n        <img src=\"images/hn2.jpg\" className=\"page-icon\" alt=\"icon\" />\r\n        <span className=\"page-Title\"> HACKER NEWS</span>\r\n      </Link>\r\n      <NavBar tabs={tabs} />\r\n    </div>\r\n  );\r\n}\r\n","import store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport TopStories from \"./views/topstories\";\nimport JobStories from \"./views/jobstories\";\nimport AskStories from \"./views/askstories\";\nimport CommentPage from \"./views/commentpage\";\nimport { TitleBar } from \"./components/presentation/titlebar\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"main-container\">\n            <TitleBar />\n            <Switch>\n              <Route exact path=\"/\" component={TopStories} />\n              <Route path=\"/news/:id\" component={CommentPage} />\n              <Route exact path=\"/askstories\" component={AskStories} />\n              <Route exact path=\"/jobstories\" component={JobStories} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/reset.css\";\nimport \"./css/layout.css\";\nimport \"./css/style.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}